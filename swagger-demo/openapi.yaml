openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'HR API'
  description: 'Simple Example of an HR API'
  termsOfService: https://www.gnu.org/licenses/gpl-3.0.en.html
  contact:
    name: Steve
    url:  https://github.com/steve1281/kubernetes_tutorial
    email: steve1281@hotmail.com
  license:
    name: Steve License
    url: https://www.gnu.org/licenses/gpl-3.0.en.html

servers: 
  - url: https://dev.foo.com/v1
    description: Dev Server
  - url: https://prod.foo.com/v1
    description: Prod Server
    
paths: 
  /employees:
    get:
      description: Obtain information about employees from the HR database
      parameters: 
        - name: bodyLimit
          in: query
          description: The amount of employes returned
          schema:
            type: integer
            minimum: 10
            maximum: 20
            example: 15
            
        - name: pageLimit
          in: query
          description: The pages to return employees info returned
          schema:
            type: integer
            minimum: 1
            maximum: 5
            example: 2
      responses:
        200:
          description: Successful pull of employee info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employees"
      
    post:
      description: Creates a new employee in the database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
              
      responses:
        200:
          description: Successful employee creation.
                      
  /employees/{id}:
    get:
      description: Obtain information about specific employee
      parameters: 
        - in: path
          name: id
          required: true
          description: The ID of the employee
          schema:
            type: integer
            example: 54
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'    
        
components:
  schemas:
    Employee:
      type: object
      description: Model containing employee info
      properties:
        id: 
          type: integer
          example: 4
        employee name:
          type: string
          example: John Smith
        employee title:
          type: string
          example: Programmer      
          
    Employees:
      description: Model of an array of Employee
      type: array
      items:
        $ref: '#/components/schemas/Employee'
                        
                      
                      
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            